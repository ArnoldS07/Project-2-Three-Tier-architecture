#!/usr/bin/env bash
set -eux

# Update & install Docker on Ubuntu
sudo apt update -y
sudo apt install -y ca-certificates curl gnupg lsb-release

# Add Dockerâ€™s official GPG key and repo
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update -y
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

sudo systemctl enable --now docker

# Login to ECR
ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
aws ecr get-login-password --region "${region}" \
  | docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.${region}.amazonaws.com"

# Runtime environment
cat >/home/ubuntu/app.env <<ENV
DB_HOST=${db_host}
DB_PORT=${db_port}
DB_USER=${db_user}
DB_PASSWORD=${db_pass}
API_PORT=8080
ENV

# Docker Compose file
cat >/home/ubuntu/docker-compose.yml <<YML
version: "3.9"
services:
  backend:
    image: ${ecr_repo_backend}:latest
    env_file: /home/ubuntu/app.env
    ports:
      - "8080:8080"
  frontend:
    image: ${ecr_repo_frontend}:latest
    environment:
      - API_URL=http://localhost:8080
    ports:
      - "80:80"
YML

# Run Docker Compose
sudo docker compose -f /home/ubuntu/docker-compose.yml pull
sudo docker compose -f /home/ubuntu/docker-compose.yml up -d --remove-orphans
